<Window
    x:Class="PNGBuddy.SettingsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:PNGBuddy.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:PNGBuddy"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Width="800"
    Height="450"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />

        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Focusable="False"
                                RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="ForestGreen" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="DarkGreen" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Focusable="False"
                                RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="Red" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="DarkRed" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="28" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <DockPanel>
        <!--  Title Bar  -->
        <Grid DockPanel.Dock="Top">
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                <TextBlock
                    Grid.Column="1"
                    Margin="4,0,0,0"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Foreground="White"
                    Text="Settings" />
            </StackPanel>

            <StackPanel
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <Button
                    Click="OnMinButtonClick"
                    RenderOptions.EdgeMode="Aliased"
                    Style="{StaticResource TitleBarButtonStyle}">
                    <Path
                        Width="46"
                        Height="32"
                        VerticalAlignment="Center"
                        Data="M 18,15 H 28"
                        Stroke="White"
                        StrokeThickness="1" />
                </Button>
                <Button Click="OnCloseButtonClick" Style="{StaticResource TitleBarCloseButtonStyle}">
                    <Path
                        Width="46"
                        Height="32"
                        VerticalAlignment="Center"
                        Data="M 18,11 27,20 M 18,20 27,11"
                        Stroke="White"
                        StrokeThickness="1" />
                </Button>
            </StackPanel>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid>
                <StackPanel Margin="5">
                    <ComboBox
                        Name="InputBox"
                        Margin="5"
                        materialDesign:HintAssist.FloatingScale="1"
                        materialDesign:HintAssist.Hint="Input Device"
                        SelectionChanged="InputBox_Selected"
                        Style="{StaticResource MaterialDesignFloatingHintComboBox}" />
                    <TextBlock HorizontalAlignment="Center">Mic Threshold (-80db to 0db)</TextBlock>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Slider
                            Name="MicThreshold"
                            Grid.Column="0"
                            Margin="5,0,5,0"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="0"
                            Minimum="-80"
                            TickFrequency="1"
                            TickPlacement="BottomRight">
                            <Slider.Value>
                                <local:SettingBinding Mode="TwoWay" Path="MIC_THRESHOLD" />
                            </Slider.Value>
                        </Slider>
                        <TextBox
                            Name="NumericInput"
                            Grid.Column="1"
                            Width="50"
                            PreviewTextInput="NumericInput_PreviewTextInput">
                            <TextBox.Text>
                                <local:SettingBinding Mode="TwoWay" Path="MIC_THRESHOLD" />
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                    <CheckBox
                        Name="GrayScaleCheckBox"
                        Margin="5"
                        Checked="GrayScaleCheckBox_Checked"
                        Content="Grayscale picture when muted"
                        Unchecked="GrayScaleCheckBox_Unchecked">
                        <CheckBox.IsChecked>
                            <local:SettingBinding Mode="TwoWay" Path="MUTED_GRAYSCALE" />
                        </CheckBox.IsChecked>
                    </CheckBox>
                    <CheckBox
                        Name="BlinkingCheckBox"
                        Margin="5"
                        Checked="BlinkingCheckBox_Checked"
                        Content="Blinking"
                        Unchecked="GrayScaleCheckBox_Unchecked">
                        <CheckBox.IsChecked>
                            <local:SettingBinding Mode="TwoWay" Path="SHOULD_BLINK" />
                        </CheckBox.IsChecked>
                    </CheckBox>
                    <CheckBox
                        Name="BlinkSpeakCheckBox"
                        Margin="5"
                        Checked="BlinkSpeakCheckBox_Checked"
                        Content="Blinking while speaking"
                        IsEnabled="{Binding ElementName=BlinkingCheckBox, Path=IsChecked}"
                        Unchecked="GrayScaleCheckBox_Unchecked">
                        <CheckBox.IsChecked>
                            <local:SettingBinding Mode="TwoWay" Path="SHOULD_BLINK_SPEAK" />
                        </CheckBox.IsChecked>
                    </CheckBox>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            Name="BlinkDuration"
                            Grid.Column="0"
                            Margin="5"
                            materialDesign:HintAssist.FloatingScale="1"
                            materialDesign:HintAssist.Hint="Blink Duration (in milliseconds)"
                            IsEnabled="{Binding ElementName=BlinkingCheckBox, Path=IsChecked}"
                            PreviewTextInput="BlinkDuration_PreviewTextInput"
                            Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                            TextChanged="BlinkDuration_TextChanged">
                            <TextBox.Text>
                                <local:SettingBinding Mode="TwoWay" Path="BLINK_DURATION" />
                            </TextBox.Text>
                        </TextBox>
                        <TextBox
                            Name="BlinkInterval"
                            Grid.Column="1"
                            Margin="5"
                            materialDesign:HintAssist.FloatingScale="1"
                            materialDesign:HintAssist.Hint="Blink Interval (in milliseconds)"
                            IsEnabled="{Binding ElementName=BlinkingCheckBox, Path=IsChecked}"
                            PreviewTextInput="BlinkDuration_PreviewTextInput"
                            Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                            TextChanged="BlinkInterval_TextInput">
                            <TextBox.Text>
                                <local:SettingBinding Mode="TwoWay" Path="BLINK_INTERVAL" />
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                    <Grid>
                        <StackPanel Margin="5">
                            <Label HorizontalAlignment="Center">Transparency/Chroma Key</Label>
                            <RadioButton
                                Name="TransparentButton"
                                Checked="TransparentButton_Checked"
                                Content="Transparent Window"
                                GroupName="Transparency" />
                            <RadioButton
                                Name="CustomColor"
                                Checked="CustomColor_Checked"
                                GroupName="Transparency"
                                IsChecked="True">
                                <TextBox IsReadOnly="True" Text="{Binding ElementName=ColorPicker, Path=Color}" />
                            </RadioButton>
                            <materialDesign:ColorPicker
                                Name="ColorPicker"
                                Height="100"
                                Margin="5"
                                IsEnabled="{Binding ElementName=CustomColor, Path=IsChecked}">
                                <materialDesign:ColorPicker.Color>
                                    <local:SettingBinding Mode="TwoWay" Path="BACKGROUND_COLOR" />
                                </materialDesign:ColorPicker.Color>
                            </materialDesign:ColorPicker>

                        </StackPanel>
                    </Grid>


                </StackPanel>
            </Grid>
            <Grid Grid.Column="1">
                <StackPanel Margin="5,5,5,5" Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            Name="IdlePicture"
                            Grid.Column="0"
                            materialDesign:HintAssist.Hint="Idle Picture"
                            IsReadOnly="True"
                            Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                        <Button
                            Grid.Column="1"
                            Margin="8,0,8,0"
                            Click="IdleSelectFile"
                            Content="Select File" />
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            Name="SpeakingPicture"
                            Grid.Column="0"
                            materialDesign:HintAssist.Hint="Speaking Picture"
                            IsReadOnly="True"
                            Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                        <Button
                            Grid.Column="1"
                            Margin="8,0,8,0"
                            Click="SpeakSelectFile"
                            Content="Select File" />
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            Name="BlinkingPicture"
                            Grid.Column="0"
                            materialDesign:HintAssist.Hint="Blinking"
                            IsReadOnly="True"
                            Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                        <Button
                            Grid.Column="1"
                            Margin="8,0,8,0"
                            Click="BlinkSelectFile"
                            Content="Select File" />
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            Name="BlinkSpeakPicture"
                            Grid.Column="0"
                            materialDesign:HintAssist.Hint="Blinking while Speaking"
                            IsReadOnly="True"
                            Style="{DynamicResource MaterialDesignFloatingHintTextBox}" />
                        <Button
                            Grid.Column="1"
                            Margin="8,0,8,0"
                            Click="BlinkSpeakSelectFile"
                            Content="Select File" />
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <PasswordBox
                            Name="WSPassword"
                            Grid.Column="0"
                            Margin="0,0,5,0"
                            materialDesign:HintAssist.Hint="Websocket Password"
                            Loaded="WSPassword_Loaded"
                            PasswordChanged="WSPassword_PasswordChanged"
                            PasswordChar="●"
                            Style="{DynamicResource MaterialDesignFloatingHintRevealPasswordBox}" />
                        <TextBox
                            Name="WSPort"
                            Grid.Column="1"
                            Margin="5,0,5,0"
                            materialDesign:HintAssist.Hint="Websocket Port"
                            PreviewTextInput="BlinkDuration_PreviewTextInput"
                            Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                            TextInput="TextBox_TextInput">
                            <TextBox.Text>
                                <local:SettingBinding Mode="TwoWay" Path="WEBSOCKET_PORT" />
                            </TextBox.Text>
                        </TextBox>
                    </Grid>
                </StackPanel>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
